<Task revision="1" schemaVersion="7.3">
   <Registration>
      <Name>Factorization Machine.ctk</Name>
      <Description>The Factorization Machine task performs matrix factorization that can be used for recommendation or predictive modeling with sparse transactional data.</Description>
      <GUID>2bb7b225-d0ef-4a5f-b433-5424095d5d03</GUID>
      <Procedures>FACTMAC</Procedures>
      <Links>
         <Link href="https://documentation.sas.com/?softwareId=STUDIOBASIC&amp;softwareVersion=01&amp;softwareContextId=tasks&amp;requestor=inapp">SAS Studio Task Reference Guide</Link>
         <Link href=""> </Link>
         <Link href=""> </Link>
         <Link href="https://documentation.sas.com/?softwareId=ANVIYA&amp;softwareVersion=01&amp;softwareContextId=proc_factmac&amp;requestor=inapp">The FACTMAC Procedure</Link>
         <Link href=""> </Link>
         <Link href=""> </Link>
         <Link href="http://support.sas.com/training/viyasdmml">SAS Tutorials</Link>
      </Links>
   </Registration>

   <Metadata>
      <DataSources>
        <DataSource libraryEngineInclude="CAS" name="dataset" where="true">
         <Roles>
            <Role exclude="intervalVariable,nominalVariable" maxVars="1" minVars="1" name="targetVariable" type="N">Interval target:</Role>
            <Role exclude="targetVariable,intervalVariable" maxVars="0" minVars="2" name="nominalVariable" type="A">Nominal inputs:</Role>
            <Role exclude="targetVariable,nominalVariable" maxVars="0" minVars="0" name="intervalVariable" type="N">Interval inputs:</Role>
            <Role indent="3" maxVars="0" minVars="0" name="outputVariables" type="A">Include these variables:</Role>
            <Role indent="3" maxVars="0" minVars="0" name="outputVariables2" type="A">Include these variables:</Role>
         </Roles>
         </DataSource>
      </DataSources>

      <Options>
         <Option inputType="string" name="dataTab">Data</Option>
         <Option inputType="string" name="dataGroup">Data</Option>

         <Option inputType="string" name="rolesGroup">Roles</Option>
         <Option inputType="string" name="otherRolesGroup">ADDITIONAL ROLES</Option>

         <Option inputType="string" name="optionsTab">Options</Option>
         <Option inputType="string" name="optionsGroup">Training Options</Option>
	      <Option helpMessageRef="autotuneReadMore" inputType="checkbox" name="autotune">Automatically tune selected options</Option>
         <Option inputType="string" name="autotuneReadMore">The autotuning process explores many different combinations of algorithm options, training a model for each combination (and multiple models when using cross-validation).  In an effort to find the best model, some of these combinations will be configurations that take a long time to train.  The overall time it takes to find the best model will vary and you should expect this process to take significantly longer than training a single model.</Option>

         <Option defaultValue="autotuneASEChoice" inputType="combobox" name="autoIntervalObjective">Objective:</Option>

         <Option inputType="string" name="autotuneDetailsGroup">Genetic Algorithm Settings</Option>

         <Option defaultValue="1" inputType="checkbox" name="tuneNfactors">Autotune number of factors</Option>
         <Option decimalPlaces="0" defaultValue="5" formatValue="false" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the number of factors" maxValue="100" minValue="1" missingMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the number of factors" name="nfactors" promptMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the number of factors" rangeMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the number of factors" required="true" width="100px">Number of factors:</Option>
         <Option decimalPlaces="0" defaultValue="5" formatValue="false" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the initial value of number of factors" maxValue="100" minValue="2" missingMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the initial value of number of factors" name="nfactorsinit" promptMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the initial value of number of factors" rangeMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the initial value of number of factors" required="true" width="75px">Initial value:</Option>
         <Option decimalPlaces="0" defaultValue="5" formatValue="false" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the lower bound of the number of factors" maxValue="100" minValue="1" missingMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the lower bound of the number of factors" name="nfactorslb" promptMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the lower bound of the number of factors" rangeMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the lower bound of the number of factors" required="true" width="75px">Lower bound:</Option>
         <Option decimalPlaces="0" defaultValue="30" formatValue="fales" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the upper bound of the number of factors" maxValue="100" minValue="1" missingMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the upper bound of the number of factors" name="nfactorsub" promptMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the upper bound of the number of factors" rangeMessage="Enter an integer greater than or equal to 1 and less than or equal to 100 for the upper bound of the number of factors" required="true" width="75px">Upper bound:</Option>

         <Option defaultValue="1" inputType="checkbox" name="tuneMaxiter">Autotune number of iterations</Option>
         <Option decimalPlaces="0" defaultValue="30" formatValue="false" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 for the maximum number of iterations" maxValue="999999" minValue="1" missingMessage="Enter an integer greater than or equal to 1 for the maximum number of iterations" name="maxiter" promptMessage="Enter an integer greater than or equal to 1 for the maximum number of iterations" rangeMessage="Enter an integer greater than or equal to 1 and less than 100000 for the maximum number of iterations" required="true" width="75px">Number of iterations:</Option>
         <Option decimalPlaces="0" defaultValue="30" formatValue="false" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 for the initial value of the maximum number of iterations" maxValue="999999" minValue="1" missingMessage="Enter an integer greater than or equal to 1 for the initial value of the maximum number of iterations" name="maxiterinit" promptMessage="Enter an integer greater than or equal to 1 for the initial value of the maximum number of iterations" rangeMessage="Enter an integer greater than or equal to 1 for the initial value of the maximum number of iterations" required="true" width="75px">Initial value:</Option>
         <Option decimalPlaces="0" defaultValue="10" formatValue="false" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 for the lower bound of the maximum number of iterations" maxValue="999999" minValue="1" missingMessage="Enter an integer greater than or equal to 1 for the lower bound of the maximum number of iterations" name="maxiterlb" promptMessage="Enter an integer greater than or equal to 1 for the lower bound of the maximum number of iterations" rangeMessage="Enter an integer greater than or equal to 1 for the lower bound of the maximum number of iterations" required="true" width="75px">Lower bound:</Option>
         <Option decimalPlaces="0" defaultValue="200" formatValue="false" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 for the upper bound for the maximum number of iterations" maxValue="999999" minValue="1" missingMessage="Enter an integer greater than or equal to 1 for the upper bound for the maximum number of iterations" name="maxiterub" promptMessage="Enter an integer greater than or equal to 1 for the upper bound for the maximum number of iterations" rangeMessage="Enter an integer greater than or equal to 1 for the upper bound for the maximum number of iterations" required="true" width="75px">Upper bound:</Option>

         <Option defaultValue="1" inputType="checkbox" name="tuneLearnstep">Autotune step size</Option>
         <Option decimalPlaces="0,15" defaultValue="0.001" inputType="numbertext" invalidMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for learning step size" maxValue="1.5" minValue=".00000001" missingMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for learning step size" name="learnstep" promptMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for learning step size" rangeMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for learning step size" required="true" width="125px">Step size:</Option>
         <Option decimalPlaces="0,15" defaultValue="0.001" indent="1" inputType="numbertext" invalidMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the initial learning step size" maxValue="1.5" minValue=".00000001" missingMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the initial learning step size" name="learnstepinit" promptMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the initial learning step size" rangeMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the initial learning step size" required="true" width="110px">Initial value:</Option>
         <Option decimalPlaces="0,15" defaultValue="0.0000000001" indent="1" inputType="numbertext" invalidMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the lower bound of learning step size" maxValue="1.5" minValue="0.0000000001" missingMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the lower bound of learning step size" name="learnsteplb" promptMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the lower bound of learning step size" rangeMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the lower bound of learning step size" required="true" width="110px">Lower bound:</Option>
         <Option decimalPlaces="0,15" defaultValue="1" indent="1" inputType="numbertext" invalidMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the upper bound of learning step size" maxValue="1.5" minValue=".0000000001" missingMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the upper bound of learning step size" name="learnstepub" promptMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the upper bound of learning step size" rangeMessage="Enter a number greater than .00000001 and less than or equal to 1.5 for the upper bound of learning step size" required="true" width="110px">Upper bound:</Option>

         <Option inputType="string" name="autotuneGroup">Autotune Settings</Option>
         <Option defaultValue="gaSearchChoice" inputType="combobox" name="autoSearchMethod">Search method:</Option>
         <Option inputType="string" name="gaSearchChoice">Genetic algorithm</Option>
         <Option inputType="string" name="lhsSearchChoice">Latin hypercube sample</Option>
         <Option inputType="string" name="randomSearchChoice">Random sample</Option>
         <Option inputType="string" name="bayesSearchChoice">Bayesian sample</Option>

         <Option decimalPlaces="0" defaultValue="5" formatValue_="false" increment="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 for the maximum number of iterations" maxValue="999999999" minValue="1" missingMessage="Enter an integer greater than or equal to 1 for the maximum number of iterations" name="autoMaxiter" promptMessage="Enter an integer greater than or equal to 1 for the maximum number of iterations" rangeMessage="Enter an integer greater than or equal to 1 for the maximum number of iterations" required="true" width="50px">Maximum iterations:</Option>
         <Option decimalPlaces="0" defaultValue="50" increment="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 3 for the maximum number of evaluations" maxValue="999999999" minValue="3" missingMessage="Enter an integer greater than or equal to 3 for the maximum number of evaluations" name="autoMaxevals" promptMessage="Enter an integer greater than or equal to 3 for the maximum number of evaluations" rangeMessage="Enter an integer greater than or equal to 3 for the maximum number of evaluations" required="true" width="50px">Maximum evaluations:</Option>
         <Option decimalPlaces="0" defaultValue="10" increment="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 2 for the number of evaluations per iteration" maxValue="999999999" minValue="2" missingMessage="Enter an integer greater than or equal to 2 for the number of evaluations per iteration" name="autoPopsize" promptMessage="Enter an integer greater than or equal to 2 for the number of evaluations per iteration" rangeMessage="Enter an integer greater than or equal to 2 for the number of evaluations per iteration" required="true" width="50px">Evaluations per iteration:</Option>
            <Option decimalPlaces="0" defaultValue="50" increment="1" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than 1 for the sample size" maxValue="999999999" minValue="2" missingMessage="Enter an integer greater than 1 for the sample size" name="autoSampleSize" promptMessage="Enter an integer greater than 1 for the sample size" rangeMessage="Enter an integer greater than 1 for the sample size" required="true" width="75px">Sample size:</Option>

         <Option defaultValue="autotuneASEChoice" inputType="combobox" name="autoIntervalObjective">Objective:</Option>
         <Option inputType="string" name="autotuneASEChoice">Average square error</Option>
         <Option inputType="string" name="autotuneMAEChoice">Mean absolute error</Option>
         <Option inputType="string" name="autotuneMSLEChoice">Mean square logarithmic error</Option>
         <Option inputType="string" name="autotuneRaseChoice">Root average square error</Option>
         <Option inputType="string" name="autotuneRMAEChoice">Root mean absolute error</Option>
         <Option inputType="string" name="autotuneRMSLEChoice">Root mean square logarithmic error</Option>

         <Option decimalPlaces="0,15" defaultValue="60" increment="1" inputType="numstepper" invalidMessage="Enter a number greater than or equal to 1 for the maximum time in minutes" maxValue="999999999" minValue="1" missingMessage="Enter a number greater than or equal to 1 for the maximum time in minutes" name="autoMaxtime" promptMessage="Enter a number greater than or equal to 1 for the maximum time in minutes" rangeMessage="Enter a number greater than or equal to 1 for the maximum time in minutes" required="true" width="50px">Maximum time (in minutes):</Option>

         <Option defaultValue="autoPartitionChoice" inputType="combobox" name="autotuneCombo">Validation method:</Option>
         <Option inputType="string" name="autoPartitionChoice">Partition</Option>
         <Option inputType="string" name="autoCVChoice">K-fold cross-validation</Option>

         <Option defaultValue="0.3" indent="1" inputType="numbertext" invalidMessage="Enter a value greater than 0 and less than 1 for the proportion of validation data observations in the data set" maxValue="0.9999999999" minValue="0.0000000001" missingMessage="Enter a value greater than 0 and less than 1 for the proportion of validation data observations in the data set" name="autoValidationFraction" promptMessage="Enter a value greater than 0 and less than 1 for the proportion of validation data observations in the data set" rangeMessage="Enter a value greater than 0 and less than 1 for the proportion of validation data observations in the data set" required="true" width="50px">Proportion of validation cases:</Option>
         <Option decimalPlaces="0" defaultValue="5" increment="1" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 2 and less than or equal to 20 for the number of folds" maxValue="20" minValue="2" missingMessage="Enter an integer greater than or equal to 2 and less than or equal to 20 for the number of folds" name="autoNFolds" promptMessage="Enter an integer greater than or equal to 2 and less than or equal to 20 for the number of folds" rangeMessage="Enter an integer greater than or equal to 2 and less than or equal to 20 for the number of folds" required="true" width="50px">Number of folds:</Option>

            <Option inputType="checkbox" name="tuneNParallel">Set number of parallel evaluations</Option>
            <Option decimalPlaces="0" defaultValue="2" increment="1" indent="1" inputType="numstepper" invalidMessage="Enter an integer greater than or equal to 1 for the number of parallel evaluations" maxValue="999999999" minValue="1" missingMessage="Enter an integer greater than or equal to 1 for the number of parallel evaluations" name="autoNParallel" promptMessage="Enter an integer greater than or equal to 1 for the number of parallel evaluations" rangeMessage="Enter an integer greater than or equal to 1 for the number of parallel evaluations" required="true" width="50px">Parallel evaluations:</Option>

         <Option defaultValue="tableHistory" inputType="combobox" name="tuneHistoryCombo">Evaluation history report:</Option>
         <Option inputType="string" name="tableHistory" returnValue="table">Results table</Option>
         <Option inputType="string" name="logHistory" returnValue="log">Log</Option>
         <Option inputType="string" name="allHistory" returnValue="all">Results table and log</Option>
         <Option inputType="string" name="noHistory" returnValue="none">Suppress report</Option>

         <Option inputType="string" name="tunerplotGroup">Autotune plots</Option>
         <Option inputType="checkbox" name="tunerPlot">Objective history</Option>
         <Option inputType="checkbox" name="bestPlot">Best objective history</Option>
         <Option inputType="checkbox" name="byparmPlot">Option values vs. objective</Option>

<!-- Interpretability plots -->
            <Option inputType="string" name="interpretGroup">Interpretability Plots</Option>
            <Option inputType="checkbox" name="pdPlot">Partial dependence plot</Option>
            <Option helpMessageRef="iceplothelp" inputType="checkbox" name="icePlot">Individual conditional expectation plot</Option>
            <Option inputType="string" name="iceplothelp">Only the first 200 plots are created.  For other plots, copy the PROC SGPLOT code and alter the WHERE statement.</Option>
            <Option defaultValue="nominalPD" indent="1" inputType="combobox" name="pdCombo">Analysis variable type:</Option>
            <Option inputType="string" name="intervalPD">Interval input</Option>
            <Option inputType="string" name="nominalPD">Nominal input</Option>
            <Option indent="2" inputType="combobox" name="pdPlotVar1" required="true" selectMessage="Select an interval input" sourceLink="intervalVariable">Variable:</Option>
            <Option defaultValue="10" increment="1" indent="2" inputType="numstepper" invalidMessage="Enter a value between 2 and 100 inclusive" maxValue="100" minValue="2" missingMessage="Enter a value between 2 and 100 inclusive" name="pdBins" promptMessage="Enter a value between 2 and 100 inclusive" rangeMessage="Enter a value between 2 and 100 inclusive" required="true">Number of bins:</Option>
            <Option indent="2" inputType="combobox" name="pdPlotVar2" required="true" selectMessage="Select a nominal input" sourceLink="nominalVariable">Variable:</Option>
            <Option defaultValue="10" increment="1" indent="2" inputType="numstepper" invalidMessage="Enter a value between 2 and 100 inclusive" maxValue="100" minValue="2" missingMessage="Enter a value between 2 and 100 inclusive" name="pdMaxlev" promptMessage="Enter a value between 2 and 100 inclusive" rangeMessage="Enter a value between 2 and 100 inclusive" required="true">Maximum number of levels:</Option>
            <Option inputType="string" name="pdPlotTitle">Partial Dependence:</Option>
            <Option inputType="string" name="icePlotTitle">Individual Conditional Expectation:</Option>
            <Option inputType="string" name="icePlotMsg">Only the first 200 observations will be plotted</Option>

         <Option inputType="string" name="outputTab">Output</Option>
         <Option inputType="string" name="outputGroup">Output Data</Option>
         <Option inputType="string" name="outputMsg">The following tables must use a CAS engine libref:</Option>
         <Option inputType="checkbox" name="outputCBX" nls="outputCBXKey">Create scored data</Option>
         <Option indent="1" inputType="outputdata" libraryEngineInclude="CAS" name="outputDSName" required="true" unique="true">Specify a CAS table:</Option>
         <Option indent="2" inputType="string" name="includeVarsInstruction">Include variables from the input data set:</Option>
         <Option indent="2" inputType="radio" name="includeAllVars" variable="includeVars">All variables</Option>
         <Option indent="2" inputType="radio" name="includeAnalysisVars" variable="includeVars">Variables used in the analysis</Option>
         <Option indent="2" inputType="radio" name="includeSelectedVars" variable="includeVars">Selected variables</Option>
         <Option defaultValue="1" indent="2" inputType="radio" name="includeNoVars" variable="includeVars">No variables</Option>

         <Option inputType="checkbox" name="outModelcheck">Create computed factor parameters</Option>
         <Option indent="1" inputType="outputdata" libraryEngineInclude="CAS" name="outModel" required="true" unique="true">Specify a CAS table:</Option>
         <Option inputType="checkbox" name="scoreCode">Save scoring model</Option>
         <Option indent="1" inputType="outputdata" libraryEngineInclude="CAS" name="scoringCodeFileName" required="true" unique="true">Specify a CAS table:</Option>
         <Option indent="2" inputType="string" name="includeVarsInstruction2">Include variables from the input data set:</Option>
         <Option indent="2" inputType="radio" name="includeAllVars2" variable="includeVars2">All variables</Option>
         <Option defaultValue="1" indent="2" inputType="radio" name="includeAnalysisVarsPred2" variable="includeVars2">Variables used in the analysis excluding target, for prediction</Option>
         <Option indent="2" inputType="radio" name="includeAnalysisVarsAssess2" variable="includeVars2">Variables used in the analysis including target, for assessment</Option>
	      <Option indent="2" inputType="radio" name="includeSelectedVars2" variable="includeVars2">Selected variables</Option>

         <Option inputType="string" name="autotitle1">Tune with {0}</Option>
         <Option inputType="string" name="odscomment">NOTE: The output statements are required for the autotune plots.</Option>
         <Option inputType="string" name="defaultLabel">default</Option>
         <Option inputType="string" name="bestLabel">best</Option>
         <Option inputType="string" name="interpmsg">Note: This feature requires at least 2 input variables</Option>

      </Options>
   </Metadata>

   <UI>
      <Container option="dataTab">
         <Group open="true" option="dataGroup">
            <DataItem data="dataset"/>
         </Group>
         <Group open="true" option="rolesGroup">
            <RoleItem role="targetVariable"/>
            <RoleItem role="nominalVariable"/>
            <RoleItem role="intervalVariable"/>
         </Group>
      </Container>

      <Container option="optionsTab">
         <Group open="true" option="optionsGroup">
            <OptionItem option="autotune"/>

            <OptionItem option="tuneNfactors"/>
            <OptionItem option="nfactors"/>
            <HorizontalLayout>
               <OptionItem option="nfactorsinit"/>
               <OptionItem option="nfactorslb"/>
               <OptionItem option="nfactorsub"/>
            </HorizontalLayout>

            <OptionItem option="tuneMaxiter"/>
            <OptionItem option="maxiter"/>
            <HorizontalLayout>
               <OptionItem option="maxiterinit"/>
               <OptionItem option="maxiterlb"/>
               <OptionItem option="maxiterub"/>
            </HorizontalLayout>

            <OptionItem option="tuneLearnstep"/>
            <OptionItem option="learnstep"/>
            <HorizontalLayout>
               <OptionItem option="learnstepinit"/>
               <OptionItem option="learnsteplb"/>
               <OptionItem option="learnstepub"/>
            </HorizontalLayout>

            <Group open="true" option="autotuneGroup">

               <OptionChoice option="autoSearchMethod">
                  <OptionItem option="gaSearchChoice"/>
                  <OptionItem option="lhsSearchChoice"/>
                  <OptionItem option="randomSearchChoice"/>
                  <OptionItem option="bayesSearchChoice"/>
               </OptionChoice>

               <Group option="autotuneDetailsGroup">
                  <HorizontalLayout>
                     <OptionItem option="autoMaxiter"/>
                     <OptionItem option="autoMaxevals"/>
                     <OptionItem option="autoPopsize"/>
                  </HorizontalLayout>
               </Group>
               <OptionItem option="autoSampleSize"/>

               <OptionChoice option="autoIntervalObjective">
                  <OptionItem option="autotuneASEChoice"/>
                  <OptionItem option="autotuneMAEChoice"/>
                  <OptionItem option="autotuneMSLEChoice"/>
                  <OptionItem option="autotuneRaseChoice"/>
                  <OptionItem option="autotuneRMAEChoice"/>
                  <OptionItem option="autotuneRMSLEChoice"/>
              </OptionChoice>
              <OptionItem option="autoMaxtime"/>
              <OptionChoice option="autotuneCombo">
                 <OptionItem option="autoPartitionChoice"/>
                 <OptionItem option="autoCVChoice"/>
              </OptionChoice>
              <OptionItem option="autoValidationFraction"/>
              <OptionItem option="autoNFolds"/>
              <OptionItem option="tuneNParallel"/>
              <OptionItem option="autoNParallel"/>

              <OptionChoice option="tuneHistoryCombo">
                 <OptionItem option="tableHistory"/>
                 <OptionItem option="logHistory"/>
                 <OptionItem option="allHistory"/>
                 <OptionItem option="noHistory"/>
              </OptionChoice>

            </Group>
            <Group option="tunerplotGroup">
               <OptionItem option="tunerPlot"/>
               <OptionItem option="bestPlot"/>
               <OptionItem option="byparmPlot"/>
            </Group>

         </Group>

            <Group open="true" option="interpretGroup">
               <OptionItem option="interpmsg"/>
               <OptionItem option="pdPlot"/>
               <OptionItem option="icePlot"/>
                  <OptionChoice option="pdCombo">
                  <OptionItem option="intervalPD"/>
                  <OptionItem option="nominalPD"/>
               </OptionChoice>
               <OptionItem option="pdPlotVar1"/>
               <OptionItem option="pdBins"/>
               <OptionItem option="pdPlotVar2"/>
               <OptionItem option="pdMaxlev"/>
            </Group>

      </Container>

      <Container option="outputTab">
         <Group open="true" option="outputGroup">
            <OptionItem option="outputMsg"/>
            <OptionItem option="outputCBX"/>
            <OptionItem option="outputDSName"/>
            <OptionItem option="includeVarsInstruction"/>
            <OptionItem option="includeAllVars"/>
            <OptionItem option="includeAnalysisVars"/>
            <OptionItem option="includeNoVars"/>
            <OptionItem option="includeSelectedVars"/>
            <RoleItem role="outputVariables"/>
            <OptionItem option="outModelcheck"/>
            <OptionItem option="outModel"/>
            <OptionItem option="scoreCode"/>
            <OptionItem option="scoringCodeFileName"/>
            <OptionItem option="includeVarsInstruction2"/>
            <OptionItem option="includeAllVars2"/>
            <OptionItem option="includeAnalysisVarsPred2"/>
		    <OptionItem option="includeAnalysisVarsAssess2"/>
            <OptionItem option="includeSelectedVars2"/>
           <RoleItem role="outputVariables2"/>

         </Group>
      </Container>
   </UI>

   <Dependencies>

      <Dependency condition="($autotune == '1')">
         <Target action="show" conditionResult="true" option="autotuneGroup"/>
         <Target action="hide" conditionResult="false" option="autotuneGroup"/>
         <Target action="show" conditionResult="true" option="tuneNfactors"/>
         <Target action="hide" conditionResult="false" option="tuneNfactors"/>
         <Target action="show" conditionResult="true" option="tuneLearnstep"/>
         <Target action="hide" conditionResult="false" option="tuneLearnstep"/>
         <Target action="show" conditionResult="true" option="tuneMaxiter"/>
         <Target action="hide" conditionResult="false" option="tuneMaxiter"/>
         <Target action="show" conditionResult="true" option="tunerplotGroup"/>
         <Target action="hide" conditionResult="false" option="tunerplotGroup"/>
      </Dependency>

      <Dependency condition="($tuneNfactors == '1')">
         <Target action="hide" conditionResult="true" option="nfactors"/>
         <Target action="show" conditionResult="false" option="nfactors"/>
         <Target action="show" conditionResult="true" option="nfactorsinit"/>
         <Target action="hide" conditionResult="false" option="nfactorsinit"/>
         <Target action="show" conditionResult="true" option="nfactorslb"/>
         <Target action="hide" conditionResult="false" option="nfactorslb"/>
         <Target action="show" conditionResult="true" option="nfactorsub"/>
         <Target action="hide" conditionResult="false" option="nfactorsub"/>
         <Target action="hide" conditionResult="false" option="nfactorsub"/>
      </Dependency>

      <Dependency condition="($tuneLearnstep == '1')">
         <Target action="hide" conditionResult="true" option="learnstep"/>
         <Target action="show" conditionResult="false" option="learnstep"/>
         <Target action="show" conditionResult="true" option="learnstepinit"/>
         <Target action="hide" conditionResult="false" option="learnstepinit"/>
         <Target action="show" conditionResult="true" option="learnsteplb"/>
         <Target action="hide" conditionResult="false" option="learnsteplb"/>
         <Target action="show" conditionResult="true" option="learnstepub"/>
         <Target action="hide" conditionResult="false" option="learnstepub"/>
      </Dependency>

      <Dependency condition="($tuneMaxiter == '1')">
         <Target action="hide" conditionResult="true" option="maxiter"/>
         <Target action="show" conditionResult="false" option="maxiter"/>
         <Target action="show" conditionResult="true" option="maxiterinit"/>
         <Target action="hide" conditionResult="false" option="maxiterinit"/>
         <Target action="show" conditionResult="true" option="maxiterlb"/>
         <Target action="hide" conditionResult="false" option="maxiterlb"/>
         <Target action="show" conditionResult="true" option="maxiterub"/>
         <Target action="hide" conditionResult="false" option="maxiterub"/>
      </Dependency>

      <Dependency condition="($outputCBX == '1')">
         <Target action="enable" conditionResult="true" option="outputDSName"/>
         <Target action="disable" conditionResult="false" option="outputDSName"/>
         <Target action="show" conditionResult="true" option="includeVarsInstruction"/>
         <Target action="hide" conditionResult="false" option="includeVarsInstruction"/>
         <Target action="show" conditionResult="true" option="includeVars"/>
         <Target action="hide" conditionResult="false" option="includeVars"/>
      </Dependency>

      <Dependency condition="($outputCBX=='1' &amp;&amp; $includeVars=='includeSelectedVars')">
         <Target action="show" conditionResult="true" option="outputVariables"/>
         <Target action="hide" conditionResult="false" option="outputVariables"/>
      </Dependency>

      <Dependency condition="($scoreCode==1)">
         <Target action="enable" conditionResult="true" option="scoringCodeFileName"/>
         <Target action="disable" conditionResult="false" option="scoringCodeFileName"/>
         <Target action="show" conditionResult="true" option="includeVarsInstruction2"/>
         <Target action="hide" conditionResult="false" option="includeVarsInstruction2"/>
         <Target action="show" conditionResult="true" option="includeVars2"/>
         <Target action="hide" conditionResult="false" option="includeVars2"/>
      </Dependency>

      <Dependency condition="($scoreCode=='1' &amp;&amp; $includeVars2=='includeSelectedVars2')">
         <Target action="show" conditionResult="true" option="outputVariables2"/>
         <Target action="hide" conditionResult="false" option="outputVariables2"/>
      </Dependency>

      <Dependency condition="$outModelcheck == '1'">
         <Target action="enable" conditionResult="true" option="outModel"/>
         <Target action="disable" conditionResult="false" option="outModel"/>
      </Dependency>

      <Dependency condition="($autotune == 1 &amp;&amp; $autoSearchMethod == 'gaSearchChoice')">
         <Target action="show" conditionResult="true" option="autotuneDetailsGroup"/>
         <Target action="hide" conditionResult="false" option="autotuneDetailsGroup"/>
     </Dependency>

     <Dependency condition="($autotune == 1 &amp;&amp; ($autoSearchMethod == 'lhsSearchChoice' || $autoSearchMethod == 'randomSearchChoice'))">
        <Target action="show" conditionResult="true" option="autoSampleSize"/>
        <Target action="hide" conditionResult="false" option="autoSampleSize"/>
     </Dependency>

     <Dependency condition="$autotune == 1 &amp;&amp; $autotuneCombo == 'autoPartitionChoice'">
        <Target action="show" conditionResult="true" option="autoValidationFraction"/>
        <Target action="hide" conditionResult="false" option="autoValidationFraction"/>
     </Dependency>

     <Dependency condition="$autotune == 1 &amp;&amp; $autotuneCombo == 'autoCVChoice'">
        <Target action="show" conditionResult="true" option="autoNFolds"/>
        <Target action="hide" conditionResult="false" option="autoNFolds"/>
     </Dependency>

     <Dependency condition="$autotune == 1 &amp;&amp; $tuneNParallel == 1">
         <Target action="show" conditionResult="true" option="autoNParallel"/>
         <Target action="hide" conditionResult="false" option="autoNParallel"/>
     </Dependency>


<!-- Interpretability plot dependencies -->
        <Dependency condition="($nominalVariable.size() + $intervalVariable.size()) &lt; 2">
           <Target action="show" conditionResult="true" option="interpmsg"/>
           <Target action="hide" conditionResult="false" option="interpmsg"/>
           <Target action="disable" conditionResult="true" option="interpretGroup"/>
           <Target action="enable" conditionResult="false" option="interpretGroup"/>
        </Dependency>
        <Dependency condition="($pdPlot == 1 || $icePlot == 1) &amp;&amp; ($nominalVariable.size() + $intervalVariable.size() &gt; 1)">
           <Target action="show" conditionResult="true" option="pdCombo"/>
           <Target action="hide" conditionResult="false" option="pdCombo"/>
        </Dependency>
        <Dependency condition="($pdPlot == 1 || $icePlot == 1) &amp;&amp; $intervalVariable.size() == 0 ">
           <Target action="set" conditionResult="true" option="pdCombo" property="value" value="nominalPD"/>
        </Dependency>
        <Dependency condition="($pdPlot == 1 || $icePlot == 1) &amp;&amp; $nominalVariable.size() == 0 ">
           <Target action="set" conditionResult="true" option="pdCombo" property="value" value="intervalPD"/>
        </Dependency>
        <Dependency condition="(($pdPlot == 1 || $icePlot == 1) &amp;&amp; $pdCombo == 'intervalPD' &amp;&amp; ($nominalVariable.size() + $intervalVariable.size() &gt; 1))">
           <Target action="show" conditionResult="true" option="pdPlotVar1"/>
           <Target action="hide" conditionResult="false" option="pdPlotVar1"/>
           <Target action="show" conditionResult="true" option="pdBins"/>
           <Target action="hide" conditionResult="false" option="pdBins"/>
        </Dependency>
        <Dependency condition="($pdPlot == 1 || $icePlot == 1) &amp;&amp; $pdCombo == 'nominalPD' &amp;&amp; ($nominalVariable.size() + $intervalVariable.size() &gt; 1)">
           <Target action="show" conditionResult="true" option="pdPlotVar2"/>
           <Target action="hide" conditionResult="false" option="pdPlotVar2"/>
           <Target action="show" conditionResult="true" option="pdMaxlev"/>
           <Target action="hide" conditionResult="false" option="pdMaxlev"/>
        </Dependency>
        <Dependency condition="($pdPlot ==1 || $icePlot == 1) &amp;&amp; $useNominalTarget == '1' ">
           <Target action="show" conditionResult="true" option="pdPlotValue"/>
           <Target action="hide" conditionResult="false" option="pdPlotValue"/>
        </Dependency>

   </Dependencies>

   <Requirements>
      <Requirement condition="!($autotune ==1 &amp;&amp; $tuneNfactors == 1 &amp;&amp; ($nfactorslb &gt; $nfactorsub))">
         <Message>The lower bound for the number of factors must be less than the upper bound.</Message>
      </Requirement>

      <Requirement condition="!($autotune ==1 &amp;&amp; $tuneLearnstep == 1 &amp;&amp; ($learnsteplb &gt; $learnstepub))">
         <Message>The lower bound for step size must be less than the upper bound.</Message>
      </Requirement>

      <Requirement condition="!($autotune ==1 &amp;&amp; $tuneMaxiter == 1 &amp;&amp; ($maxiterlb &gt; $maxiterub))">
         <Message>The lower bound for the number of iterations must be less than the upper bound.</Message>
      </Requirement>

      <Requirement condition="!($autotune==1 &amp;&amp; $tuneNfactors == 0 &amp;&amp; $tuneLearnstep == 0 &amp;&amp; $tuneMaxiter == 0)">
         <Message>Select at least one option to autotune.</Message>
      </Requirement>

        <Requirement condition="!($pdCombo == 'nominalPD' &amp;&amp; $nominalVariable.size() == 0)">
           <Message>No nominal input variables have been specified</Message>
        </Requirement>
        <Requirement condition="!($pdCombo == 'intervalPD' &amp;&amp; $intervalVariable.size() == 0)">
           <Message>No interval input variables have been specified</Message>
        </Requirement>

   </Requirements>

   <CodeTemplate>
<![CDATA[
#set($needtmpcas = 0)
#if ( ($pdPlot == 1 || $icePlot == 1) && ($scoreCode == 0))
   #set($needtmpcas=1)
#end

#if ($needtmpcas == 1)
libname _tmpcas_ cas caslib="CASUSER";
#end

proc factmac data=$dataset
#if((!($autotune == 1) || ($autotune ==1 && !($tuneNfactors == 1))) && !($nfactors == 5)) nfactors=$nfactors
#end
#if((!($autotune == 1) || ($autotune ==1 && !($tuneLearnstep == 1))) && !($learnstep == .001)) learnstep=$learnstep
#end
#if((!($autotune == 1) || ($autotune ==1 && !($tuneMaxiter == 1))) && !($maxiter == 30)) maxiter=$maxiter
#end
#if($outModelcheck == '1') outmodel=$outModel #end
;
#if ($dataset.getWhereClause() != '')
   where $dataset.getWhereClause();
#end
   target #foreach($item in $targetVariable) $item #end ;
   input #foreach($item in $nominalVariable) $item #end / level=nominal;
   #if($intervalVariable.size() > 0) input #foreach($item in $intervalVariable) $item #end / level=interval; #end
#if ($outputCBX==1)
   output out=$outputDSName
   #if     ($includeVars=='includeAllVars') copyvars=(_all_)
   #elseif ($includeVars=='includeSelectedVars')
      #if( $outputVariables.size() > 0 ) copyvars=(#foreach( $item in $outputVariables ) $item#end) #end
   #elseif ($includeVars=='includeAnalysisVars')
 copyvars=( #foreach($item in $targetVariable) $item #end
         #if ($intervalVariable.size() > 0)
             #foreach( $item in $intervalVariable ) $item#end
         #end
         #if ($nominalVariable.size() > 0)
             #foreach( $item in $nominalVariable ) $item#end
         #end
 )
       #end
;
#end

#if($autotune == 1)
autotune
tuningparameters=(
   #if($tuneNfactors == 1)
      nfactors#if( !($nfactorsinit == 5) || !($nfactorslb == 5) || !($nfactorsub == 30))(
         #if(!($nfactorsinit == 5)) init=$nfactorsinit #end
         #if(!($nfactorslb == 5)) lb=$nfactorslb #end
         #if(!($nfactorsub == 30)) ub=$nfactorsub #end
      )
      #end
   #else nfactors(exclude)
   #end

   #if($tuneLearnstep == 1)
      learnstep#if(!($learnstepinit == .001) || !($learnsteplb == .0000000001) || !($learnstepub == 1))(
         #if(!($learnstepinit == .001)) init=$learnstepinit #end
         #if(!($learnsteplb == .0000000001)) lb=$learnsteplb #end
         #if(!($learnstepub == 1)) ub=$learnstepub #end
      )
      #end
      #else learnstep(exclude)
   #end

   #if($tuneMaxiter == 1)
      maxiter#if(!($maxiterinit == 30) || !($maxiterlb == 10) || !($maxiterub == 200))(
         #if(!($maxiterinit == 30)) init=$maxiterinit #end
         #if(!($maxiterlb == 10)) lb=$maxiterlb #end
         #if(!($maxiterub == 200)) ub=$maxiterub #end
      )
      #end
      #else maxiter(exclude)
   #end
   )

   #if (!($autoSearchMethod == 'gaSearchChoice'))searchmethod=
#if ($autoSearchMethod == 'lhsSearchChoice')lhs #elseif ($autoSearchMethod == 'randomSearchChoice')random #elseif ($autoSearchMethod == 'bayesSearchChoice')bayesian #end
#if ((($autoSearchMethod == 'lhsSearchChoice' || $autoSearchMethod == 'randomSearchChoice')) && !($autoSampleSize == 50))samplesize=$autoSampleSize#end
   #end


   objective =
      #if     ($autoIntervalObjective == 'autotuneMAEChoice')mae
      #elseif ($autoIntervalObjective == 'autotuneASEChoice') ase
      #elseif ($autoIntervalObjective == 'autotuneMSLEChoice')msle
      #elseif ($autoIntervalObjective == 'autotuneRaseChoice')rase
      #elseif ($autoIntervalObjective == 'autotuneRMAEChoice')rmae
      #elseif ($autoIntervalObjective == 'autotuneRMSLEChoice')rmsle
      #end

   #if     ($autotuneCombo == 'autoPartitionChoice') fraction=$autoValidationFraction
   #elseif ($autotuneCombo == 'autoCVChoice') kfold=$autoNFolds
   #end

   ##Fix for SASSTUDIO-13316 - Always add maxTime to the AUTOTUNE statement
   maxtime=%sysevalf($autoMaxtime*60)

   #if ($autoSearchMethod == 'gaSearchChoice')
      #if (!($autoMaxiter == 5)) maxiters=$autoMaxiter#end
      #if (!($autoMaxevals == 50)) maxevals=$autoMaxevals#end
      #if (!($autoPopsize == 10)) popsize=$autoPopsize#end
   #end
   #if ($tuneNParallel == 1) nparallel=$autoNParallel#end

   #if($tuneHistoryCombo != 'table')
      #if($tunerPlot == '1' || $byparmPlot == '1')
         #if($tuneHistoryCombo == 'log' || $tuneHistoryCombo == 'none'); %put $odscomment#else evalhistory=$tuneHistoryCombo
         #end
#else evalhistory=$tuneHistoryCombo
#end
#end;
#if($tunerPlot==1)ods output TunerResults = _tempTuneResults_;#end
#if($tunerPlot==1 || $byparmPlot==1)ods output EvaluationHistory = _tempEvalHistory_;#end
#if($bestPlot==1)ods output IterationHistory = _tempIterHistory_;#end
#end ## end of autottune statement

#if($tunerPlot==1 || $bestPlot==1 || $byparmPlot==1)

##search method
#if($autoSearchMethod=="gaSearchChoice") #set($smeth = $gaSearchChoice)
   #elseif ($autoSearchMethod=="lhsSearchChoice") #set($smeth= $lhsSearchChoice)
   #elseif ($autoSearchMethod=="randomSearchChoice") #set($smeth= $randomSearchChoice)
   #else #set($smeth= $bayesSearchChoice)
#end

## objective variable
#if($autoIntervalObjective=="autotuneASEChoice") #set($objvar = "averagesqerr")
   #elseif ($autoIntervalObjective=="autotuneMAEChoice") #set($objvar = "meanabserr")
   #elseif ($autoIntervalObjective=="autotuneMSLEChoice") #set($objvar = "meansqlogerr")
   #elseif ($autoIntervalObjective=="autotuneRaseChoice") #set($objvar = "rootase")
   #elseif ($autoIntervalObjective=="autotuneRMAEChoice") #set($objvar = "rootmeanabserr")
   #elseif ($autoIntervalObjective=="autotuneRMSLEChoice") #set($objvar = "rootmeansqlogerr")
   #else
   #end

#end  ## end of plots loop

#if ($scoreCode==1)
   savestate rstore = $scoringCodeFileName;
   #if     ($includeVars2=='includeAllVars2') id _all_;
   #elseif ($includeVars2=='includeSelectedVars2')
      #if( $outputVariables2.size() > 0 ) id #foreach( $item in $outputVariables2 ) $item#end; #end
   #elseif ($includeVars2=='includeAnalysisVarsPred2' || $includeVars2=='includeAnalysisVarsAssess2')
     id #if ($includeVars2=='includeAnalysisVarsAssess2')#foreach($item in $targetVariable) $item #end #end
         #if ($intervalVariable.size() > 0)
             #foreach( $item in $intervalVariable ) $item#end
         #end
         #if ($nominalVariable.size() > 0)
             #foreach( $item in $nominalVariable ) $item#end
         #end
         ;
      #end
#end

#if ($needtmpcas == 1)
   savestate rstore = _tmpcas_._factmacModel_;
#end
run;

#if($tunerPlot==1 || $bestPlot==1 || $byparmPlot==1)
   #set( $tmptitle = $autotitle1.replace("{0}", "${smeth}") )
   title $CTMUtil.quoteString($tmptitle);
#end

#if($tunerPlot==1)
data _null_;
   set _tempTuneResults_;
   if _n_ = 1 then call symput('default',$objvar);
   if _n_ = 2 then call symput('best',$objvar);
run;
data _tempEvalHistory_;
   set _tempEvalHistory_;
   default=&default;
   best=&best;
run;
proc sgplot data=_tempEvalHistory_;

   scatter x=evaluation y=$objvar / group=iteration;
   series x=evaluation y=default/curvelabel="$defaultLabel" lineattrs=(pattern=shortdash);
   series x=evaluation y=best / curvelabel="$bestLabel" lineattrs=(pattern=shortdash color=green);
run;
#end

#if($bestPlot==1)
proc sgplot data=_tempIterHistory_;
   series x=iteration y=best_obj;
   series x=iteration y=time_sec / y2axis;
run;
#end

#if($byparmPlot==1)
proc sgscatter data=_tempEvalHistory_;
   plot
   #if($tuneNfactors==1)$objvar * nfactors #end
   #if($tuneLearnstep==1) $objvar * learnstep #end
   #if($tuneMaxiter==1) $objvar * maxiter #end
   / group=iteration
;
run;
#end

#if($tunerPlot==1 || $bestPlot==1 || $byparmPlot==1)
proc delete
data=#if($tunerPlot==1)_tempTuneResults_#end#if($tunerPlot==1 || $byparmPlot==1) _tempEvalHistory_#end#if($bestPlot==1) _tempIterHistory_#end;
run;
#end

#if ($pdPlot == 1 || $icePlot == 1)
#foreach($item in $targetVariable)
   #set($tempvar = "$item.get('value')")
   #set($predictedTarget = "p_$tempvar")
#end

#if($pdCombo == 'intervalPD') #foreach($item in $pdPlotVar1) #set($pdPlotVar = $item.get('value')) #end #end
#if($pdCombo == 'nominalPD')  #foreach($item in $pdPlotVar2) #set($pdPlotVar = $item.get('value')) #end #end

#set($CASlibref = $dataset.getLibrary())
#set($CASlib="%sysfunc(getlcaslib($CASlibref))")
#if($scoreCode == 1)
#set($outCASlibref = $scoringCodeFileName.getLibrary())
#set($outCASlib = "%sysfunc(getlcaslib($outCASlibref))")
#else
#set($outCASlibref = "_tmpcas_")
#set($outCASlib = "casuser")
#end

proc cas;
   explainModel.partialDependence /
      table={name=$CTMUtil.quoteString($dataset.get('table')), caslib=$CTMUtil.doubleQuoteString($CASlib)} modelTableType='ASTORE'
      #if($scoreCode == 1) modelTable={name=$CTMUtil.quoteString($scoringCodeFileName.get('table'))}#end
      #if($needtmpcas == 1) modelTable = {name='_factmacModel_' caslib='casuser'}#end
      inputs={#foreach($item in $nominalVariable)$CTMUtil.doubleQuoteString($item.get('value')) #end
         #foreach($item in $intervalVariable) $CTMUtil.doubleQuoteString($item.get('value')) #end}
      analysisVariable={name=$CTMUtil.doubleQuoteString($pdPlotVar)
      #if($pdCombo == 'intervalPD')nBins = $pdBins#end
      #if($pdCombo == 'nominalPD')maxLevels = $pdMaxlev #end
      }
      predictedTarget=$CTMUtil.doubleQuoteString($predictedTarget)
      outputTables = {replace=true, names={PARTIALDEPENDENCE={name="_partialdep_" caslib=$CTMUtil.doubleQuoteString($outCASlib)}}}
      #if($icePlot == 1) output = {casout={name="_icedata_", caslib=$CTMUtil.doubleQuoteString($outCASlib), replace=true}, copyvars='ALL'}#end
      ;
run;
quit;

#if($pdPlot == 1)
#set($temptitle = "$pdPlotTitle $pdPlotVar")
title $CTMUtil.doubleQuoteString($temptitle);
proc sgplot data = ${outCASlibref}._partialdep_;
    series x = $CTMUtil.toSASName($pdPlotVar) y = MeanPrediction  ;
run;
#end

#if($icePlot == 1)
data _icedata_;
   set ${outCASlibref}._icedata_;
   retain _id_ 0;
   if _bin_id_ = 1 then _id_ + 1;
run;
#set($temptitle = "$icePlotTitle $pdPlotVar")
title $CTMUtil.doubleQuoteString($temptitle);
/* $icePlotMsg */
proc sgplot data = _icedata_;
    where _id_ < 200;
    series x = $CTMUtil.toSASName($pdPlotVar) y = $predictedTarget / group = _id_;
run;
#end

#end ##end of interpretability plots

#if($needtmpcas == 1)
#if($pdPlot == 1 || $icePlot == 1)
proc delete data=_tmpcas_._factmacModel_;
run;
#end
libname _tmpcas_;
#end
#if ($icePlot ==1)
proc delete data=work._icedata_;
run;
#end
]]>
   </CodeTemplate>
<TemplateValues version="7.3">
<![CDATA[
{"dataset":{"librarytable":"CASLIB.HMEQ2"},"targetVariable":"json:[{\"value\":\"BAD\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"}]","nominalVariable":"json:[{\"value\":\"LOAN\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"MORTDUE\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"VALUE\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"REASON\",\"type\":\"Char\",\"length\":7,\"format\":\"$7.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"JOB\",\"type\":\"Char\",\"length\":7,\"format\":\"$7.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"YOJ\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"DEROG\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"DELINQ\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"CLAGE\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"NINQ\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"CLNO\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"},{\"value\":\"DEBTINC\",\"type\":\"Numeric\",\"length\":8,\"format\":\"BEST12.\",\"informat\":\"\",\"className\":\"RoleObject\"}]","intervalVariable":"","outputVariables":"","outputVariables2":"","autotune":"0","autoIntervalObjective":[{"value":"autotuneASEChoice","displayValue":"Average square error","keys":["autotuneASEChoice",null,"Average square error"],"label":"Average square error","baseid":"{\"value\":\"autotuneASEChoice\",\"label\":\"Average square error\"}","id":"{\"value\":\"autotuneASEChoice\",\"label\":\"Average square error\"}1"}],"tuneNfactors":"1","nfactors":5,"nfactorsinit":5,"nfactorslb":5,"nfactorsub":30,"tuneMaxiter":"1","maxiter":30,"maxiterinit":30,"maxiterlb":10,"maxiterub":200,"tuneLearnstep":"1","learnstep":0.001,"learnstepinit":0.001,"learnsteplb":1e-10,"learnstepub":1,"autoSearchMethod":[{"value":"gaSearchChoice","displayValue":"Genetic algorithm","keys":["gaSearchChoice",null,"Genetic algorithm"],"label":"Genetic algorithm","baseid":"{\"value\":\"gaSearchChoice\",\"label\":\"Genetic algorithm\"}","id":"{\"value\":\"gaSearchChoice\",\"label\":\"Genetic algorithm\"}1"}],"autoMaxiter":5,"autoMaxevals":50,"autoPopsize":10,"autoSampleSize":50,"autoMaxtime":60,"autotuneCombo":[{"value":"autoPartitionChoice","displayValue":"Partition","keys":["autoPartitionChoice",null,"Partition"],"label":"Partition","baseid":"{\"value\":\"autoPartitionChoice\",\"label\":\"Partition\"}","id":"{\"value\":\"autoPartitionChoice\",\"label\":\"Partition\"}1"}],"autoValidationFraction":0.3,"autoNFolds":5,"tuneNParallel":"0","autoNParallel":2,"tuneHistoryCombo":[{"value":"table","displayValue":"Results table","keys":["tableHistory","table","Results table"],"label":"Results table","baseid":"{\"value\":\"table\",\"label\":\"Results table\"}","id":"{\"value\":\"table\",\"label\":\"Results table\"}1"}],"tunerPlot":"0","bestPlot":"0","byparmPlot":"0","pdPlot":"0","icePlot":"0","pdCombo":[{"value":"nominalPD","displayValue":"Nominal input","keys":["nominalPD",null,"Nominal input"],"label":"Nominal input","baseid":"{\"value\":\"nominalPD\",\"label\":\"Nominal input\"}","id":"{\"value\":\"nominalPD\",\"label\":\"Nominal input\"}1"}],"pdPlotVar1":"","pdBins":10,"pdPlotVar2":"","pdMaxlev":10,"outputCBX":"0","outputDSName":{"value":"","cbSelected":false},"includeAllVars":"0","includeVars":"includeNoVars","includeAnalysisVars":"0","includeSelectedVars":"0","includeNoVars":"1","outModelcheck":"0","outModel":{"value":"","cbSelected":false},"scoreCode":"0","scoringCodeFileName":{"value":"","cbSelected":false},"includeAllVars2":"0","includeVars2":"includeAnalysisVarsPred2","includeAnalysisVarsPred2":"1","includeAnalysisVarsAssess2":"0","includeSelectedVars2":"0"}
]]>
</TemplateValues>

</Task>